@model dveri2.Models.ForMainModel
@{
    ViewBag.Title = Model.SeoTitle;
    ViewBag.Keywords = Model.SeoKey;
    ViewBag.Description = Model.SeoDesc;
}

<!-- Непосредственный код слайдера -->
<div id="slider">
    <div id="mask">
        <ul id="image_container">
            @foreach (var item in Model.SliderImgMk)
            {
                @Html.Raw("<img class='slMain' alt='' title='' src=\"data:image/jpeg;base64," + Convert.ToBase64String(item.Imaging) + "\" />")
            }

        </ul>
    </div>
    <img src="~/Content/ControlSlider/glass.png" id="glass" alt="" class="Glas" />

    @*переключатель слайдов*@
    @*<div id="encart">

            <ul id="dots">
                @for (int i = 1; i <= Model.CountFile; i++)
                {
                    <li class="button-@i" onClick="changeImage(@i)"></li>
                }

            </ul>
        </div>*@
    <img src="~/Content/ControlSlider/fleche-gauche.png" alt="" id="fleche_gauche" class="fleche" onClick=" prevImage()" />
    <img src="~/Content/ControlSlider/fleche-droite.png" alt="" id="fleche_droite" class="fleche" onClick=" nextImage()" />
</div>
<div>
    @Html.Action("BreadCrumbs", "MegkomnatnyeDveri", new { mainmodel = Model, namepart = "Межкомнатные двери" })
</div>
<div class="productlist" id="listproduct">
    <div class="leftMainMenu">
        <div class="dvSortCost">
            Cортировать по цене:
        </div>
        <div class="buttonsort">
            @switch (Model.Sort)
            {
                case 0:
                    {
                        @Html.ActionLink("по возрастанию", "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 1, brand = Model.CurrentBrand, flagMaterial = Model.FlagMaterial }, new { @class = "upsort" })
                        @Html.ActionLink("по убыванию", "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 2, brand = Model.CurrentBrand, flagMaterial = Model.FlagMaterial }, new { @class = "downsort" })
                        break;
                    }
                case 1:
                    {
                        @Html.ActionLink("по возрастанию", "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 1, brand = Model.CurrentBrand, flagMaterial = Model.FlagMaterial }, new { @class = "upsort actsortup" })
                        @Html.ActionLink("по убыванию", "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 2, brand = Model.CurrentBrand, flagMaterial = Model.FlagMaterial }, new { @class = "downsort" })
                        break;
                    }
                case 2:
                    {
                        @Html.ActionLink("по возрастанию", "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 1, brand = Model.CurrentBrand, flagMaterial = Model.FlagMaterial }, new { @class = "upsort" })
                        @Html.ActionLink("по убыванию", "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 2, brand = Model.CurrentBrand, flagMaterial = Model.FlagMaterial }, new { @class = "downsort actsortdown" })
                        break;
                    }

                default:
                    break;

            }
        </div>
        @*меню выбора брэнда*@
        <div class="MenKataltext">
            Каталог товаров:
        </div>
        <div>
            @Html.ActionLink("МЕЖКОМНАТНЫЕ ДВЕРИ ВЕСЬ КАТАЛОГ", "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { sort = 0, brand = "весьтовар", id = 1, flagMaterial = false }, new { @class = "leftMenuButton весьтовар" })
            @foreach (var i in Model.Brand)
            {
                if (i != null)
                {
                    @Html.ActionLink("Межкомнатные двери " + i, "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 0, brand = i,flagMaterial = false }, new { @class = "leftMenuButton " + i.Replace(" ", string.Empty) })
                }
            }
        </div>
        @*меню выбора материала дверей*@
        <div>
            <div class="MenMaterialTextKat">
                Межкомнатные двери:
            </div>
            @foreach (var i in Model.Material)
            {
                if (i != null)
                {
                    @Html.ActionLink(i, "MegkomnatnyeDveriIndex", "MegkomnatnyeDveri", new { id = 1, sort = 0, brand = i,flagMaterial = true }, new { @class = "leftMenuButton " + i.Replace(" ", string.Empty) })
                }
            }
        </div>




        @*слайдер левый боковой orbit*@
        <div class="LeftSlider mt20">
            <div id="featured">
                @foreach (var item in Model.SliderLeftImgMk)
                {
                    @Html.Raw("<img class='imLeftSl' alt='' title='' src=\"data:image/jpeg;base64," + Convert.ToBase64String(item.Imaging) + "\" />")
                }
            </div>
        </div>
        @*статьи 5 последних с сылками на их же*@
        <div>
            @Html.Action("GetFiveArticles", "Articles")
        </div>


    </div>
    @Html.Partial("ProductList")
</div>
<div style="clear:both">

</div>
@*появляется при догрузке страницы*@
<div id="loading" class="idloading">
    <img src="~/Content/loading.gif" alt="" class="doLoadingImg" />
</div>
@*разбиение на страничный режим*@
<div class="pager">
    @Html.PageLinks(Model.PagingInfo, x => Url.Action("MegkomnatnyeDveriIndex", new { id = x, sort = Model.Sort, brand = Model.CurrentBrand,flagMaterial = Model.FlagMaterial, PageSize = Model.PagingInfo.ItemsPerPage }))
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/jquery.orbit.min.js")

    @*замена pagingLinks на кнопку показать еще*@
    <script type="text/javascript">
        $(document).ready(function(){

            //выделение текущего брэнда(.Replace(" ", string.Empty)-метод замены пробелов)
            $('.@Model.CurrentBrand.Replace(" ", string.Empty)').addClass("act");


        //скрипт слайдера левого (орбит)
        $(window).load(function() {
            $("#featured").orbit({
                'bullets': false,
                'timer' : true,
                'animation' : 'horizontal-slide'
            });
        });


        @*$('.pager').replaceWith($('<div class="addpage" style="text-align:center;margin-bottom:1em"><button class="showadd" value="@Model.PagingInfo.TotalPages">  Показать еще  </button>' +
           '</div>  '));
        var page = 1;*@



        @*$('.showadd').click(
        function loadItems() {
               var totalpages = $(".showadd").val();

               var temp = "?sort=";
               var temp2 = "&brand=";
               if (page > 0 && page<totalpages) {
                   page++;
                 //анимация загрузки
                $('#loading').css("visibility","visible")
                $.ajax({
                    type: 'GET',
                    url: '/VhodnyeDveri/VhodnyeDveriIndex/' + page + temp + @Model.Sort + temp2 +'@Model.CurrentBrand',

                       success: function (data) {
                           if (data != '') {
                            $("#listproduct").append(data);//добавляет данные к низуЫ
                           }
                        else {
                            page = 1;
                        }
                       $('#loading').css("visibility","hidden")
                    }
                });
             }
             if(page==totalpages)
             {
                 $('.addpage').replaceWith($('<div class="emtypage"> </div>  '));
             }
        }  )*@
    })
    </script>

    @*//скрипт для слайдера главного*@
    <script>
        var secDuration = 6;
        var image = 1;
        var maxImages = @Model.CountFile;
        var slider = document.getElementById('slider');
        var timeout
        var flag=false;

        function changeImage(requiredImage) {

            if (!requiredImage && requiredImage != 0)
            {

                if(image < maxImages && !flag)
                {
                    image++;
                }
                else
                {
                    if(image==maxImages)
                    {
                        flag=true;
                        image--;
                    }
                    else
                        if(flag)
                        {
                            image--;
                            if(image==1)
                            {flag=false;}
                        }

                }
            }
            else
            {
                if(requiredImage > maxImages)
                {
                    image = 1;
                }
                else
                    if(requiredImage < 1)
                    {
                        image = maxImages;
                    }
                    else
                    {
                        image = requiredImage;
                    }
            }
            slider.className = "image"+image;
            clearTimeout(timeout)
            timeout = setTimeout("changeImage()",secDuration*1000);
        }
        function nextImage(){
            changeImage(image+1);
        }
        function prevImage(){
            changeImage(image-1);
        }
        changeImage(1);
    </script>

}