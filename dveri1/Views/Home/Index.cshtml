@model dveri1.Models.ForMainModel
@{
    ViewBag.Title = "Входные двери";
}

    <!-- Непосредственный код слайдера -->
<div id="slider">
     <div id="mask">
        <ul id="image_container">
               @foreach(var item in Model.SliderImg)
               {
                    @Html.Raw("<img style='width:1211px; height:190px;margin-left:-15px;margin-top:-5px;' src=\"data:image/jpeg;base64," + Convert.ToBase64String(item.Imaging) + "\" />")
               }
          
        </ul>
    </div>
    <img src="~/Content/ControlSlider/glass.png"  id="glass" style="width:1200px;height:200px"/>
  
    @*переключатель слайдов*@
       @*<div id="encart">
      
        <ul id="dots">
            @for (int i = 1; i <= Model.CountFile; i++)
            {
                <li class="button-@i" onClick="changeImage(@i)"></li>
            }
           
        </ul>
    </div>*@
      <img src="~/Content/ControlSlider/fleche-gauche.png" id="fleche_gauche" class="fleche" onClick="        prevImage()" />
    <img src="~/Content/ControlSlider/fleche-droite.png" id="fleche_droite" class="fleche" onClick="        nextImage()" />
   </div>
<div class="productlist" id="listproduct">
    <div class="leftMainMenu">
        <div>
            @switch (Model.Sort)
            {
                case 0:
                    {
                        @Html.ActionLink("Цена по возрастанию", "Index", "Home", new { id = 1, sort = 1,brand = Model.CurrentBrand }, new { @class = "leftMenuButton" })
                        @Html.ActionLink("Цена по убыванию", "Index", "Home", new { id = 1, sort = 2, brand = Model.CurrentBrand }, new { @class = "leftMenuButton" })
                        break;
                    }
                case 1:
                    {
                        @Html.ActionLink("Цена по возрастанию", "Index", "Home", new { id = 1, sort = 1, brand = Model.CurrentBrand }, new { @class = "leftMenuButton act" })
                        @Html.ActionLink("Цена по убыванию", "Index", "Home", new { id = 1, sort = 2, brand = Model.CurrentBrand }, new { @class = "leftMenuButton" })
                        break;
                    }
                case 2:
                    {
                        @Html.ActionLink("Цена по возрастанию", "Index", "Home", new { id = 1, sort = 1, brand = Model.CurrentBrand }, new { @class = "leftMenuButton" })
                        @Html.ActionLink("Цена по убыванию", "Index", "Home", new { id = 1, sort = 2, brand = Model.CurrentBrand }, new { @class = "leftMenuButton act" })
                        break;
                    }
                default:
                    break;

            }
        </div>
        <div style="padding-left:45px;margin-top:20px;margin-bottom:10px;font-size:1.1em;text-decoration-line:none">
            Выбор брэнда:
        </div>
        <div>
            @Html.ActionLink("ВЕСЬ ТОВАР", "Index", "Home", new { sort = 0, brand = "весьтовар"}, new { @class = "leftMenuButton весьтовар" })
            @foreach(var i in Model.Brand)
            {
                if (i != null)
                {
                    @Html.ActionLink(i, "Index", "Home", new { sort = 0, brand = i }, new { @class = "leftMenuButton "+i})
                }               
            }
        </div>
    </div>
    @Html.Partial("ProductList")
 </div>
<div style="clear:both">

</div>
<div id="loading" style="text-align:center;visibility:hidden;margin-top:-7em">
    <img src="~/Content/loading.gif" style="width:50px;height:50px;"/>
</div>

<div class="pager">
    @Html.PageLinks(Model.PagingInfo, x => Url.Action("Index", new { id = x,sort=Model.Sort,brand = Model.CurrentBrand, PageSize = Model.PagingInfo.ItemsPerPage }))
</div>

@*замена pagingLinks на кнопку показать еще*@
<script type="text/javascript">
    $(document).ready(function(){
        $('.pager').replaceWith($('<div class="addpage" style="text-align:center;margin-bottom:1em"><button class="showadd" value="@Model.PagingInfo.TotalPages">  Показать еще  </button>' +
           '</div>  '));
        var page = 1;
        //выделение текущего брэнда
    
        $('.@Model.CurrentBrand').addClass("act");

        $('.showadd').click(
        function loadItems() {
               var totalpages = $(".showadd").val();

               var temp = "?sort=";
               var temp2 = "&brand=";
               if (page > 0 && page<totalpages) {
                   page++;
                 //анимация загрузки
                $('#loading').css("visibility","visible")
                $.ajax({
                    type: 'GET',
                    url: '/Home/Index/' + page + temp + @Model.Sort + temp2 +'@Model.CurrentBrand',

                       success: function (data) {
                           if (data != '') {
                            $("#listproduct").append(data);
                           }
                        else {
                            page = 1;
                        }
                       $('#loading').css("visibility","hidden")
                    }
                });
             }
             if(page==totalpages)
             {
                 $('.addpage').replaceWith($('<div class="emtypage" </div>  '));
             }
        }  )
    })
</script>

@*//скрипт для слайдера главного*@
    <script>
        var secDuration = 4;
        var image = 1;
        var maxImages = @Model.CountFile;
        var slider = document.getElementById('slider');
        var timeout
        var flag=false;

        function changeImage(requiredImage) {

            if (!requiredImage && requiredImage != 0)
            {

                if(image < maxImages && !flag)
                {
                    image++;
                }
                else
                {
                    if(image==maxImages)
                    {
                        flag=true;
                        image--;
                    }
                    else
                        if(flag)
                        {
                            image--;
                            if(image==1)
                            {flag=false;}
                        }

                }
            }
            else
            {
                if(requiredImage > maxImages)
                {
                    image = 1;
                }
                else
                    if(requiredImage < 1)
                    {
                        image = maxImages;
                    }
                    else
                    {
                        image = requiredImage;
                    }
            }
            slider.className = "image"+image;
            clearTimeout(timeout)
            timeout = setTimeout("changeImage()",secDuration*1000);
        }
        function nextImage(){
            changeImage(image+1);
        }
        function prevImage(){
            changeImage(image-1);
        }
        changeImage(1);
    </script>

